---
import '@unocss/reset/tailwind.css'
import '@/styles/main.css'
import '@/styles/prose.css'
import '@/styles/markdown.css'
import '@/styles/page.css'
import '../styles/global.css'

import { getSession } from '@/lib/auth/session'
import { ClientRouter } from 'astro:transitions'
import { getUrl } from '@/utils/common'
import { SITE, UI, FEATURES } from '@/config'

// Import components
import Head from '@/components/base/Head.astro'
import Background from '@/components/Background.astro'
import SkipLink from '@/components/base/SkipLink.astro'
import NavBar from '@/components/layout/NavBar.astro'
import ErrorBoundary from '@/components/base/ErrorBoundary.astro'
import BackLink from '@/components/base/BackLink.astro'
import Footer from '@/components/layout/Footer.astro'
import ToTopButton from '@/components/ui/ToTopButton.astro'
import Backdrop from '@/components/layout/Backdrop.astro'

import type { BgType } from '@/types'

export interface Props {
  title?: string
  description?: string
  image?: string | boolean
  canonicalURL?: URL
  pageType?: string
  bodyClass?: string
  transitions?: boolean
  includeHeader?: boolean
  includeFooter?: boolean
  bgType?: BgType
}

const {
  title,
  description,
  image,
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
  includeHeader = true,
  includeFooter = true,
  bgType
} = Astro.props as Props

let style: Record<string, string> = {}

const { slideEnterAnim } = FEATURES
const enableSlideEnterAnim = Array.isArray(slideEnterAnim) && slideEnterAnim[0]
if (enableSlideEnterAnim)
  style['--enter-step'] = `${slideEnterAnim[1].enterStep}ms`

const {
  externalLink: { newTab, cursorType },
} = UI
const hasCustomCursor =
  newTab && cursorType.length > 0 && cursorType !== 'pointer'
if (hasCustomCursor) style['--external-link-cursor'] = cursorType

// Check if user is logged in for context
const session = await getSession(Astro.request)
---

<!doctype html>
<html lang={SITE.lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Preload critical Third-party Libraries -->
    <!-- Three.js is used for the spinning globe on the homepage -->
    <link
      rel="modulepreload"
      href="/node_modules/three/build/three.module.js"
    />
    <!-- NProgress for page loading indicators -->
    <link rel="modulepreload" href="/node_modules/nprogress/nprogress.js" />
    <link
      rel="preload"
      href="/node_modules/nprogress/nprogress.css"
      as="style"
    />
    <!-- Medium Zoom for image zooming -->
    <link rel="modulepreload" href="/node_modules/medium-zoom/dist/pure.js" />

    <ClientRouter />

    <!-- Sentry User Context Script -->
    <script>
      // Set user context for Sentry if available
      document.addEventListener('astro:page-load', () => {
        try {
          // Check if Sentry is available (will be injected by integration)
          if ('Sentry' in window) {
            const session = JSON.parse(
              localStorage.getItem('session') || 'null',
            )

            if (session?.user) {
              ;(window as any).Sentry.setUser({
                id: session.user.id,
                role: session.user.role,
              })
            }

            // Set additional page context
            ;(window as any).Sentry.setTag('page', window.location.pathname)
          }
        } catch (e) {
          console.error('Error setting Sentry user context:', e)
        }
      })
    </script>

    <Head {title} {description} ogImage={image} />
  </head>

  <body
    class="relative flex flex-col min-h-screen
      font-sans text-gray-700 dark:text-gray-200"
    style={Object.keys(style).length !== 0 ? style : undefined}
    data-no-sliding={!enableSlideEnterAnim ? true : undefined}
  >
    <!-- Background -->
    {bgType && <Background type={bgType} />}

    <!-- Skip Link for Accessibility -->
    <SkipLink target="#main" />
    <!-- Main Content -->
    {includeHeader && <NavBar />}
    <main id="main" class="px-7 py-10">
      <ErrorBoundary componentName="MainContentArea">
        <slot />
        {
          Astro.url.pathname !== getUrl('/') && (
            <footer class="slide-enter animate-delay-1000! prose mx-auto mt-8 print:hidden">
              <slot name="share" />
              <br />
              <BackLink />
            </footer>
          )
        }
      </ErrorBoundary>
    </main>
    {includeFooter && <Footer />}
    <ToTopButton />

    <!-- Panel Backdrop (on mobile) -->
    <Backdrop />

    <!-- Progress Bar & Image Zoom -->
    <script>
      /* nprogress */
      import nprogress from 'nprogress'
      document.addEventListener('astro:before-preparation', () => {
        nprogress.start()
      })
      document.addEventListener('astro:page-load', () => {
        nprogress.done()
      })

      /* medium-zoom */
      import mediumZoom from 'medium-zoom/dist/pure'
      const zoom = mediumZoom({
        background: 'rgb(0 0 0 / 0.8)',
      })

      document.addEventListener('astro:page-load', () => {
        zoom.detach()
        zoom.attach('.prose img:not(.no-zoom):not(a img)')
      })
    </script>
  </body>
</html>
