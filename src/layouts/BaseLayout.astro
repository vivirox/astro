---
/// <reference path="../types/astro.d.ts" />
// import '@unocss/reset/tailwind.css'
import '@/styles/main.css'
import '@/styles/prose.css'
import '@/styles/markdown.css'
import '@/styles/page.css'

// Explicitly import font styles
import '@fontsource/inter/400.css'
import '@fontsource/inter/600.css'
import '@fontsource/inter/800.css'
import '@fontsource/dm-mono/400.css'
import '@fontsource/dm-mono/500.css'
import '@fontsource/roboto-condensed/400.css'

import Head from '@/components/base/Head.astro'
import Background from '@/components/backgrounds/Background.astro'
import Link from '@/components/base/Link.astro'
import NavBar from '@/components/base/NavBar.astro'
import BackLink from '@/components/widgets/BackLink.astro'
import Footer from '@/components/base/Footer.astro'
import ToTopButton from '@/components/widgets/ToTopButton.astro'
import Backdrop from '@/components/base/Backdrop.astro'
import BrowserInfo from '@/components/utils/BrowserInfo.astro'
import Monitoring from '@/components/Monitoring.astro'

import { UI, FEATURES } from '@/config'

import type { BgType } from '@/types'

// Import global JSX declarations to fix TypeScript errors
import '../types/astro-jsx.d.ts'

interface Props {
  title?: string
  description?: string
  ogImage?: string | boolean
  bgType?: BgType | false
  pubDate?: string
  lastModDate?: string
}

const { bgType, title, description, ogImage, pubDate, lastModDate } =
  Astro.props

let style: Record<string, string> = {}

const { slideEnterAnim } = FEATURES
const enableSlideEnterAnim = Array.isArray(slideEnterAnim) && slideEnterAnim[0]
if (enableSlideEnterAnim)
  style['--enter-step'] = `${slideEnterAnim[1].enterStep}ms`

const {
  externalLink: { newTab, cursorType },
} = UI
const hasCustomCursor =
  newTab && cursorType.length > 0 && cursorType !== 'pointer'
if (hasCustomCursor) style['--external-link-cursor'] = cursorType

// Safely get current path without accessing headers directly
const currentPath = Astro.url.pathname

// Instead of accessing headers, set default values or use alternatives
// This removes all possible header usage in prerendered pages
const locals = {
  isSSR: false,
  isPrerendered: true,
  userPreferences: {
    darkMode: false,
    language: 'en-US',
    userAgent: '',
    isMobile: false,
  },
}

// Set page data for client-side usage
const pageData = {
  isSSR: false,
  isPrerendered: true,
  darkMode: false,
  language: 'en-US',
  userAgent: '',
  path: currentPath,
  isMobile: false,
}
---

<!doctype html>
<html lang="en" data-ssr={locals.isSSR} data-prerendered={locals.isPrerendered}>
  <head>
    <Head {title} {description} {ogImage} {pubDate} {lastModDate} />
    <script
      src="https://cdn.peasy.so/peasy.js"
      data-website-id="01jq3eyvd9by7mkcx6dq4a77n3"
      async></script>
    <Monitoring />

    <!-- Pass page data to client-side scripts -->
    <script define:vars={{ pageData }}>
      // Make page data available to all client scripts
      window.pageData = pageData
    </script>

    <!-- Inline critical font styles to prevent FOUT -->
    <style is:inline>
      /* Ensure proper font loading */
      body {
        font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        max-width: 100vw;
        overflow-x: hidden;
      }

      code, pre, kbd, samp {
        font-family: 'DM Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
      }

      /* Ensure content is centered */
      #main {
        width: 100%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 2.5rem 1.75rem;
      }

      /* Fix scrollbar issues */
      html, body {
        scroll-behavior: smooth;
        scrollbar-width: thin;
        scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
      }
    </style>
  </head>

  <body
    class="relative flex flex-col min-h-screen
      font-sans text-gray-700 dark:text-gray-200"
    style={Object.keys(style).length !== 0 ? style : undefined}
    data-no-sliding={!enableSlideEnterAnim ? true : undefined}
  >
    <!-- Browser Info component - uses client-side detection instead of headers -->
    <BrowserInfo />

    <!-- Background -->
    {bgType && <Background type={bgType} />}

    <!-- Main -->
    <Link
      href="#main"
      class="sr-only focus:(not-sr-only fixed start-1 top-1.5 op-20)"
    >
      Skip to content
    </Link>
    <NavBar />
    <main id="main" class="mx-auto w-full max-w-6xl px-7 py-10">
      <slot />
      {
        currentPath !== '/' && (
          <footer class="slide-enter animate-delay-1000! prose mx-auto mt-8 print:hidden">
            <slot name="share" />
            <br />
            <BackLink />
          </footer>
        )
      }
    </main>
    <Footer />
    <ToTopButton />

    <!-- Panel Backdrop (on mobile) -->
    <Backdrop />

    <!-- Progress Bar & Image Zoom -->
    <script>
      /* nprogress */
      import nprogress from 'nprogress'
      document.addEventListener('astro:before-preparation', () => {
        nprogress.start()
      })
      document.addEventListener('astro:page-load', () => {
        nprogress.done()
      })

      /* medium-zoom */
      import mediumZoom from 'medium-zoom/dist/pure'
      const zoom = mediumZoom({
        background: 'rgb(0 0 0 / 0.8)',
      })

      document.addEventListener('astro:page-load', () => {
        zoom.detach()
        zoom.attach('.prose img:not(.no-zoom):not(a img)')
      })

      /* Force font reflow if needed */
      document.fonts.ready.then(() => {
        document.documentElement.classList.add('fonts-loaded');
      });
    </script>
  </body>
</html>
