---
// A simple, lightweight admin layout without any complex dependencies
interface Props {
  title?: string
  activeItem?: string
}

const { } = Astro.props

// Define navigation items


// Basic permissions check (simplified version)
const hasPermission = (item: string) => true // In a real app, this would check actual permissions
---

<div class="min-h-screen bg-gray-100 dark:bg-gray-900">
  <!-- Sidebar -->
  <aside
    id="sidebar"
    class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700"
  >
    <div class="h-full px-3 py-4 overflow-y-auto">
      <!-- Logo -->
      <div class="flex items-center mb-5 p-2">
        <h2 class="text-xl font-semibold text-gray-800 dark:text-white">
          Admin Portal
        </h2>
      </div>

      <!-- Navigation -->
      <ul class="space-y-2 font-medium">
        {
          navItems.map(
            (item) =>
              hasPermission(item.id) && (
                <li>
                  <a
                    href={item.href}
                    class={`flex items-center p-2 rounded-lg ${
                      activeItem === item.id
                        ? 'bg-gray-100 dark:bg-gray-700 text-blue-600 dark:text-blue-500'
                        : 'text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700'
                    }`}
                  >
                    <span class="ms-3">{item.label}</span>
                  </a>
                </li>
              ),
          )
        }
      </ul>
    </div>
  </aside>

  <!-- Mobile menu toggle -->
  <div
    class="sticky top-0 z-30 flex items-center bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-4 sm:p-6 lg:px-8"
  >
    <button
      id="sidebar-toggle"
      type="button"
      class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100"
    >
      <span class="sr-only">Open sidebar</span>
      <svg
        class="w-6 h-6"
        aria-hidden="true"
        fill="currentColor"
        viewBox="0 0 20 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clip-rule="evenodd"
          fill-rule="evenodd"
          d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
        ></path>
      </svg>
    </button>
    <span class="ml-2 text-xl font-semibold md:ml-0">{title}</span>
  </div>

  <!-- Page content -->
  <div class="p-4 md:ml-64 pt-20">
    <div
      class="p-4 border-2 border-gray-200 dark:border-gray-700 border-dashed rounded-lg"
    >
      <slot />
    </div>
  </div>
</div>

<script>
  // Simple sidebar toggle functionality
  document.addEventListener('DOMContentLoaded', () => {
    const sidebarToggle = document.getElementById('sidebar-toggle')
    const sidebar = document.getElementById('sidebar')

    if (sidebarToggle && sidebar) {
      sidebarToggle.addEventListener('click', () => {
        sidebar.classList.toggle('-translate-x-full')
      })
    }
  })
</script>
