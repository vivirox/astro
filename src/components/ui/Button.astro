---
interface Props {
  href?: string
  type?: 'button' | 'submit' | 'reset'
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost'
  size?: 'sm' | 'md' | 'lg'
  class?: string
  [x: string]: any
}

const {
  href,
  type = 'button',
  variant = 'primary',
  size = 'md',
  class: className = '',
  ...res
} = Astro.props

const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700',
  secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300',
  outline: 'border border-blue-600 text-blue-600 hover:bg-blue-50',
  ghost: 'text-blue-600 hover:bg-blue-50',
}

const sizeClasses = {
  sm: 'text-sm px-3 py-1',
  md: 'px-4 py-2',
  lg: 'text-lg px-6 py-3',
}

const classes = `inline-flex items-center justify-center rounded-md transition-colors ${variantClasses[variant]} ${sizeClasses[size]} ${className}`
---

{
  href ? (
    <a href={href} class={classes} {...rest}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes} {...rest}>
      <slot />
    </button>
  )
}
