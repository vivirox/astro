---
/**
 * A utility component that provides client-side browser information
 * This avoids using Astro.request.headers which causes issues with prerendered pages
 */
---

<script>
  // Store browser information in custom properties on documen
  document.documentElement.style.setProperty(
    '--browser-language',
    navigator.language || 'en-US',
  )

  document.documentElement.style.setProperty(
    '--prefers-dark-mode',
    window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'true'
      : 'false',
  )

  document.documentElement.style.setProperty(
    '--prefers-reduced-motion',
    window.matchMedia('(prefers-reduced-motion: reduce)').matches
      ? 'true'
      : 'false',
  )

  // Listen for scheme changes
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', (e) => {
      document.documentElement.style.setProperty(
        '--prefers-dark-mode',
        e.matches ? 'true' : 'false',
      )
    })

  window
    .matchMedia('(prefers-reduced-motion: reduce)')
    .addEventListener('change', (e) => {
      document.documentElement.style.setProperty(
        '--prefers-reduced-motion',
        e.matches ? 'true' : 'false',
      )
    })

  // Make browser data available globally
  window.browserInfo = {
    language: navigator.language || 'en-US',
    languages: navigator.languages || [navigator.language || 'en-US'],
    prefersDarkMode: window.matchMedia('(prefers-color-scheme: dark)').matches,
    prefersReducedMotion: window.matchMedia('(prefers-reduced-motion: reduce)')
      .matches,
    userAgent: navigator.userAgent,
    url: window.location.href,
    pathname: window.location.pathname,
    host: window.location.host,
  }

  // Dispatch event when browser info is ready
  document.dispatchEvent(
    new CustomEvent('browser-info-ready', {
      detail: window.browserInfo,
    }),
  )
</script>
