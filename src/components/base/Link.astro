---
import { UI } from '~/config'


// Define a Props interface with both HTML attributes and our custom props
interface Props {
  href?: string
  title?: string
  rel?: string
  external?: boolean
  enableNewTabWarning?: boolean
  children?: any // Using any to bypass type checking for children
  class?: string
  [key: string]: any // Allow any string attribute from HTMLAttributes
}

const {
  external = false,
  ...res
} = Astro.props

const { externalLink } = UI









---

<a
  class:list={[
    'op-60 no-underline hover:op-100',
    { 'external-link-cursor': showCursor },
    className,
  ]}
  {href}
  {title}
  aria-label={ariaLabel}
  rel={relAttr}
  target={targetAttr}
  {...res}
>
  {
    Astro.slots.has('default') && (
      <>
        <slot />{showIcon && (
          <span
            u-i-carbon-arrow-up-righ
            class="new-tab-icon ml-0!"
            aria-hidden="true"
          />
        )}
      </>
    )
  }{
    Astro.slots.has('title') && (
      <span class="text-lg leading-1.3em align-middle">
        <slot name="title" />
        {showIcon && (
          <span
            u-i-carbon-arrow-up-righ
            class="new-tab-icon ml--1! mb-1.8!"
            aria-hidden="true"
          />
        )}
      </span>
    )
  }<slot name="end" /></a
>
