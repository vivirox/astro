---
import type { CollectionEntry } from 'astro:content'
import BaseLayout from '~/layouts/BaseLayout.astro'
import StandardLayout from '~/layouts/StandardLayout.astro'
import Toc from '~/components/toc/Toc.astro'
import ShareLink from '~/components/widgets/ShareLink.astro'
import Warning from '~/components/base/Warning.astro'
import { formatDate } from '~/utils/datetime'
import { getFilteredPosts } from '~/utils/post'
import { FEATURES } from '~/config'

// Add prerender directive
export const prerender = true

export async function getStaticPaths() {
  const posts = (await getFilteredPosts('blog')) as CollectionEntry<'blog'>[]
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props as { post: CollectionEntry<'blog'> }
const { data: frontmatter } = post
const { Content, headings } = await post.render()
const { share, toc } = FEATURES

const pubDate = frontmatter.pubDate.toISOString()
const updatedDate = frontmatter.updatedDate?.toISOString()

/* Warning message */
const warningHTML = `This article is not published yet.
Please check back later.`
---

<BaseLayout
  title={frontmatter.title}
  description={frontmatter.description}
  ogImage={frontmatter.ogImage}
  {pubDate}
  lastModDate={updatedDate}
>
  <StandardLayout title={frontmatter.title}>
    <div slot="head">
      {frontmatter.pubDate && (
        <p class="mt--6! op-50">
          <time datetime={pubDate}>{formatDate(pubDate)}</time>
          {updatedDate && (
            <time datetime={updatedDate}>
              | Updated: {formatDate(updatedDate)}
            </time>
          )}
        </p>
      )}
      {new Date(frontmatter.pubDate) > new Date() && (
        <Warning rawHTMLString={warningHTML} />
      )}
    </div>
    <div slot="article">
      {Array.isArray(toc) && toc[0] && frontmatter.toc && <Toc {headings} />}
      <Content />
    </div>
  </StandardLayout>
  <div slot="share">
    {Array.isArray(share) && share[0] && frontmatter.share && (
      <ShareLink config={share[1]} />
    )}
  </div>
</BaseLayout>
