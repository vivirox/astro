import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Get the blog post for the current page
const { entry } = Astro.props;
const { Content } = await entry.render();

// Format date
const formatDate = (date) => {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

<Layout title={`${entry.data.title} | Gradiant`}>
  <article class="container mx-auto px-4 py-8 max-w-3xl">
    <a href="/blog" class="text-primary-600 dark:text-primary-400 mb-6 inline-block">
      &larr; Back to all posts
    </a>

    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-2">{entry.data.title}</h1>
      <p class="text-gray-600 dark:text-gray-400 text-sm mb-4">
        {formatDate(entry.data.pubDate)}
        {entry.data.lastModDate && ` (Updated: ${formatDate(entry.data.lastModDate)})`}
      </p>
      <p class="text-xl text-gray-700 dark:text-gray-300">
        {entry.data.description}
      </p>
    </header>

    {entry.data.toc && (
      <div class="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg mb-8">
        <h2 class="text-lg font-medium mb-2">Table of Contents</h2>
        <nav class="toc" aria-label="Table of Contents">
          <!-- Table of contents will be auto-generated -->
        </nav>
      </div>
    )}

    <div class="prose prose-lg dark:prose-invert max-w-none">
      <Content />
    </div>

    {entry.data.share && (
      <div class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-800">
        <h2 class="text-xl font-semibold mb-4">Share this post</h2>
        <div class="flex space-x-4">
          <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(entry.data.title)}&url=${encodeURIComponent(`https://gradiant.com/blog/${entry.slug}`)}`} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400">
            Twitter
          </a>
          <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(`https://gradiant.com/blog/${entry.slug}`)}`} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400">
            LinkedIn
          </a>
          <a href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(`https://gradiant.com/blog/${entry.slug}`)}`} target="_blank" rel="noopener noreferrer" class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400">
            Facebook
          </a>
        </div>
      </div>
    )}
  </article>
</Layout>

<style is:global>
  /* Styles for the blog content */
  .prose h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.875rem;
    font-weight: 600;
  }

  .prose h3 {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .prose p {
    margin-bottom: 1.25rem;
  }

  .prose ul {
    list-style-type: disc;
    margin-left: 1.5rem;
    margin-bottom: 1.25rem;
  }

  .prose ol {
    list-style-type: decimal;
    margin-left: 1.5rem;
    margin-bottom: 1.25rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
  }

  .prose a {
    color: var(--color-primary-600);
    text-decoration: underline;
  }

  .prose blockquote {
    border-left: 4px solid var(--color-primary-500);
    padding-left: 1rem;
    font-style: italic;
    margin: 1.5rem 0;
  }

  /* Dark mode adjustments */
  :root.dark .prose a {
    color: var(--color-primary-400);
  }
</style>
