---
import { getCollection } from 'astro:content'
import Layout from '../../layouts/Layout.astro'
import { formatDate } from '~/utils/datetime'
import { getFilteredPosts } from '~/utils/post'
import { FEATURES } from '~/config'

// Set prerender to true for static generation
export const prerender = true;

export async function getStaticPaths() {
  const posts = await getFilteredPosts('changelog')

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props
const { data: frontmatter } = post
const { Content, headings } = await post.render()
const { share, toc } = FEATURES

const pubDate = frontmatter.pubDate.toISOString()
const lastModDate =
  frontmatter.lastModDate && frontmatter.lastModDate.toISOString()

/* Warning message */
const warningHTML = `This article is not yet available.
Please check back later.`
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description}
>
  <article class="prose prose-lg mx-auto">
    <h1>{frontmatter.title}</h1>

    <div class="text-sm text-gray-500 mb-6">
      {
        frontmatter.pubDate && (
          <div>
            <time datetime={pubDate}>{formatDate(pubDate)}</time>
            {lastModDate && (
              <div>
                <time datetime={lastModDate}>
                  Updated: {formatDate(lastModDate)}
                </time>
              </div>
            )}
          </div>
        )
      }

      {new Date(frontmatter.pubDate) > new Date() &&
        <div class="bg-yellow-100 text-yellow-800 p-3 my-4 rounded">
          {warningHTML}
        </div>
      }
    </div>

    {frontmatter.toc && <nav class="table-of-contents">
      <h2>Table of Contents</h2>
      <ul>
        {headings.map(heading => (
          <li class={`depth-${heading.depth}`}>
            <a href={`#${heading.slug}`}>{heading.text}</a>
          </li>
        ))}
      </ul>
    </nav>}

    <Content />
  </article>
</Layout>
