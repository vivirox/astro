---
import { getCollection, render } from 'astro:content'






import { FEATURES } from '~/config'

// Set prerender to true to generate static pages at build time
export const prerender = true

export async function getStaticPaths() {
  const posts = await getCollection('changelog')
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props

const { Content, headings } = await render(post)
const { } = FEATURES

// Format dates



// Warning message for unpublished posts

---

<BaseLayout
  title={frontmatter.title}
  description={frontmatter.description}
  ogImage={frontmatter.ogImage}
  {pubDate}
  lastModDate={updatedDate}
>
  <StandardLayout title={frontmatter.title}>
    <div slot="head">
      {
        pubDate && (
          <p class="mt--6! op-50">
            <time datetime={pubDate}>{formatDate(pubDate)}</time>
            {updatedDate && (
              <time datetime={updatedDate}>
                | Updated: {formatDate(updatedDate)}
              </time>
            )}
          </p>
        )
      }
      {
        frontmatter.pubDate && new Date(frontmatter.pubDate) > new Date() && (
          <Warning rawHTMLString={UNPUBLISHED_WARNING} />
        )
      }
    </div>
    <div slot="article">
      {Array.isArray(toc) && toc[0] && frontmatter.toc && <Toc {headings} />}
      <Content />
    </div>
  </StandardLayout>
  <div slot="share">
    {
      Array.isArray(share) && share[0] && frontmatter.share && (
        <ShareLink config={share[1]} />
      )
    }
  </div>
</BaseLayout>
