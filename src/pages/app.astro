---
import { initializeApplication, shutdownApplication } from "../lib/startup";
import { getLogger } from "../lib/logging";

const logger = getLogger();

// Execute startup logic in Astro's server contex
if (import.meta.env.SSR) {
  try {
    await initializeApplication();
    logger.info("Application started successfully");

    // Register shutdown handlers for the Node.js process
    // Note: This will only work in SSR mode
    process.on("SIGTERM", handleShutdown);
    process.on("SIGINT", handleShutdown);
  } catch (error) {
    logger.error(
      "Failed to start application",
      error instanceof Error ? error : undefined,
    );
    // Cannot exit the process in Astro middleware, log the error instead
    console.error("Application failed to start properly");
  }
}

/**
 * Handle graceful shutdown
 */
async function handleShutdown() {
  logger.info("Shutdown signal received, gracefully shutting down...");

  try {
    await shutdownApplication();
    logger.info("Application shutdown complete");
    process.exit(0);
  } catch (error) {
    logger.error(
      "Error during shutdown",
      error instanceof Error ? error : new Error(String(error)),
    );
    process.exit(1);
  }
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Application</title>
  </head>
  <body>
    <main>
      <h1>Application Status</h1>
      <p>The server-side application has been initialized.</p>
    </main>
  </body>
</html>