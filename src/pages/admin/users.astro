---
import BaseLayout from '../../layouts/BaseLayout.astro'
import AdminLayout from '../../components/admin/AdminLayout'
import { AdminService } from '../../lib/admin'
import { AdminPermission } from '../../lib/admin'

// Server-side authentication and permission check
const adminService = AdminService.getInstance()
const isAdmin = await adminService.isAdminRequest(Astro)

// Redirect non-admin users to login
if (!isAdmin) {
  return Astro.redirect('/login?returnUrl=/admin/users')
}

// Import UserManagement component (dynamically loaded on client)
---

<BaseLayout title="User Management | Gradiant Admin">
  <div class="admin-page">
    <AdminLayout title="User Management" client:load>
      <div class="users-management">
        <!-- UserManagement component will be loaded here -->
        <div id="user-management-container">
          <!-- Loading state -->
          <div class="loading-container">
            <div
              class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-purple-500"
            >
            </div>
            <p class="mt-4 text-gray-600 dark:text-gray-400">
              Loading users...
            </p>
          </div>
        </div>

        <script>
          // Dynamically import the UserManagement component
          import('../../components/admin/UserManagement')
            .then((module) => {
              const UserManagement = module.default
              const container = document.getElementById(
                'user-management-container',
              )

              if (container) {
                // Clear loading state
                container.innerHTML = ''

                // Create and render the component
                const userManagement = document.createElement('div')
                container.appendChild(userManagement)

                //   - This is a dynamic import
                new UserManagement({
                  target: userManagement,
                  props: {},
                })
              }
            })
            .catch((error) => {
              console.error('Failed to load UserManagement component:', error)

              // Show error state
              const container = document.getElementById(
                'user-management-container',
              )
              if (container) {
                container.innerHTML = `
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                  <strong class="font-bold">Error!</strong>
                  <span class="block sm:inline"> Failed to load user management interface.</span>
                </div>
              `
              }
            })
        </script>
      </div>
    </AdminLayout>
  </div>
</BaseLayout>

<style>
  .admin-page {
    width: 100%;
    min-height: 100vh;
  }

  .loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 400px;
  }
</style>
