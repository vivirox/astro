"use strict";(()=>{var e={};e.id=950,e.ids=[950],e.modules={5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5985:(e,a,s)=>{s.r(a),s.d(a,{config:()=>g,default:()=>f,routeModule:()=>y});var t={};s.r(t),s.d(t,{POST:()=>u});var n=s(3480),r=s(8667),i=s(6435),d=s(3719);class o{async processMessage(e){return{...e,fheStatus:{encrypted:!0,verified:!0,encryptionType:"fhe",processedAt:Date.now(),verificationHash:await this.generateVerificationHash(e)}}}async encryptMessage(e){return await d.BO.encrypt(JSON.stringify(e))}async verifySender(e,a){return a.includes(e)}async generateVerificationHash(e){let a=`${e.id}-${e.senderId}-${e.timestamp}`;return await d.BO.generateHash(a)}}let c=new o;async function u(e){let a=await e.json(),s={id:`msg-${crypto.randomUUID()}`,conversationId:a.conversationId,senderId:a.userId,content:a.message,timestamp:Date.now(),metadata:{ipAddress:e.headers.get("x-forwarded-for")||"unknown",userAgent:e.headers.get("user-agent")||"unknown"}},t=await c.processMessage(s);if(a.isEncrypted&&await c.encryptMessage(s),a.requireSenderVerification){let e=await p(a.conversationId);await c.verifySender(a.userId,e)}return new Response(JSON.stringify({success:!0,message:t}),{status:200,headers:{"Content-Type":"application/json"}})}async function p(e){return["user-1","user-2","ai-assistant"]}let f=(0,i.M)(t,"default"),g=(0,i.M)(t,"config"),y=new n.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/chat/send",pathname:"/api/chat/send",bundlePath:"",filename:""},userland:t})}};var a=require("../../../webpack-api-runtime.js");a.C(e);var s=e=>a(a.s=e),t=a.X(0,[94],()=>s(5985));module.exports=t})();