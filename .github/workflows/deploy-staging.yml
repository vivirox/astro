name: Deployment Staging

on:
  push:
    branches:
      - staging

permissions:
  contents: read
  id-token: write

env:
  NODE_VERSION: 22.11.0
  PNPM_VERSION: 10.0.0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Setup environment variables
        run: |
          echo "Creating .env file for Playwright tests"
          touch .env
          echo "# Test environment variables" > .env
          echo "TEST_VAR=test" >> .env

      - name: Run Playwright tests
        run: |
          pnpm exec playwright install --with-deps
          pnpm exec playwright test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm build
        env:
          LOG_LEVEL: debug
          LOG_CONSOLE: true
          LOG_AUDIT: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-staging
          path: dist
          retention-days: 7

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    concurrency:
      group: staging_environment
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-staging
          path: dist

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Deploy to staging
        run: |
          npm install -g wrangler
          wrangler pages deploy dist --project-name=gradiant-astro --branch=staging

      - name: Create deployment tag
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          git tag staging-$TIMESTAMP
          git push origin staging-$TIMESTAMP

      - name: Notify deployment status
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          slack-message: |
            ${{ job.status == 'success' && '✅ Successfully deployed to staging' || '❌ Staging deployment failed' }}
            Time: $(date)
