name: Monitoring

on:
  schedule:
    - cron: 0 */15 * * *

permissions:
  contents: read
  id-token: write

env:
  NODE_VERSION: 22.11.0
  PNPM_VERSION: 10.0.0

jobs:
  health-check-production:
    name: Production Health Check
    runs-on: ubuntu-latest
    environment: production
    env:
      APP_URL: https://app.gradiantascent.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Run health checks
        id: health-check
        run: |
          # Basic endpoint check
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.APP_URL }})
          echo "HTTP Status: $HTTP_STATUS"

          if [[ "$HTTP_STATUS" != "200" ]]; then
            echo "::error::Site is down or returning errors (HTTP $HTTP_STATUS)"
            echo "status=failing" >> $GITHUB_OUTPUT
            exit 1
          fi

          # API health check
          API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.APP_URL }}/api/health)
          echo "API Status: $API_STATUS"

          if [[ "$API_STATUS" != "200" ]]; then
            echo "::error::API is down or returning errors (HTTP $API_STATUS)"
            echo "status=failing" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "status=passing" >> $GITHUB_OUTPUT

      - name: Run Playwright tests
        if: steps.health-check.outputs.status == 'passing'
        run: |
          pnpm exec playwright install --with-deps chromium
          BASE_URL=${{ env.APP_URL }} pnpm exec playwright test tests/monitoring --project=chromium

      - name: Notify failure
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          slack-message: |
            üö® *MONITORING FAILED in production*
            Health check failed at ${{ env.APP_URL }}
            Time: $(date)

  health-check-staging:
    name: Staging Health Check
    runs-on: ubuntu-latest
    environment: staging
    env:
      APP_URL: https://staging.gradiantascent.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install

      - name: Run health checks
        id: health-check
        run: |
          # Basic endpoint check
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.APP_URL }})
          echo "HTTP Status: $HTTP_STATUS"

          if [[ "$HTTP_STATUS" != "200" ]]; then
            echo "::error::Site is down or returning errors (HTTP $HTTP_STATUS)"
            echo "status=failing" >> $GITHUB_OUTPUT
            exit 1
          fi

          # API health check
          API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${{ env.APP_URL }}/api/health)
          echo "API Status: $API_STATUS"

          if [[ "$API_STATUS" != "200" ]]; then
            echo "::error::API is down or returning errors (HTTP $API_STATUS)"
            echo "status=failing" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "status=passing" >> $GITHUB_OUTPUT

      - name: Run Playwright tests
        if: steps.health-check.outputs.status == 'passing'
        run: |
          pnpm exec playwright install --with-deps chromium
          BASE_URL=${{ env.APP_URL }} pnpm exec playwright test tests/monitoring --project=chromium

      - name: Notify failure
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          slack-message: |
            üö® *MONITORING FAILED in staging*
            Health check failed at ${{ env.APP_URL }}
            Time: $(date)

  check-performance:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: health-check-production
    environment: production
    env:
      APP_URL: https://app.gradiantascent.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            ${{ env.APP_URL }}
            ${{ env.APP_URL }}/login
            ${{ env.APP_URL }}/dashboard
          configPath: ./.github/lighthouse-config.json
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Check for critical performance issues
        run: |
          echo "Analyzing performance metrics..."

      - name: Notify performance issues
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          slack-message: |
            ‚ö†Ô∏è *Performance Issues Detected in production*
            Check the Lighthouse report for details.
            Time: $(date)
