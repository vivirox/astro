name: CI

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PNPM_VERSION: 10.6.1
  NODE_VERSION: 20.19.0
  PNPM_HOME: ${{ github.workspace }}/.pnpm

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set PNPM_HOME to PATH
        run: |
          mkdir -p $PNPM_HOME
          echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Verify pnpm installation
        run: |
          which pnpm || echo "pnpm not found in PATH"
          pnpm --version
          echo "PNPM_HOME: $PNPM_HOME"
          echo "PATH: $PATH"

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        if: github.event_name == 'pull_request'
        run: pnpm lint

  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set PNPM_HOME to PATH
        run: |
          mkdir -p $PNPM_HOME
          echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Verify pnpm installation
        run: |
          which pnpm || echo "pnpm not found in PATH"
          pnpm --version
          echo "PNPM_HOME: $PNPM_HOME"
          echo "PATH: $PATH"

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Type check
        if: github.event_name == 'pull_request'
        run: pnpm check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set PNPM_HOME to PATH
        run: |
          mkdir -p $PNPM_HOME
          echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Verify pnpm installation
        run: |
          which pnpm || echo "pnpm not found in PATH"
          pnpm --version
          echo "PNPM_HOME: $PNPM_HOME"
          echo "PATH: $PATH"

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm test:setup

      - name: Run tests
        run: pnpm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Set PNPM_HOME to PATH
        run: |
          mkdir -p $PNPM_HOME
          echo "$PNPM_HOME" >> $GITHUB_PATH

      - name: Verify pnpm installation
        run: |
          which pnpm || echo "pnpm not found in PATH"
          pnpm --version
          echo "PNPM_HOME: $PNPM_HOME"
          echo "PATH: $PATH"

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Ensure UI component directories exist
        run: |
          mkdir -p src/components/ui/button

          echo 'export { Button, type ButtonProps, type ButtonVariant, type ButtonSize } from "../button"' \
            > src/components/ui/button/index.ts
          echo 'export { default } from "../button"' >> src/components/ui/button/index.ts

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          retention-days: 7
