
## PROJECT OVERVIEW
Project: Astro

## CODE STYLE
Adhere to standard TypeScript coding conventions.  Avoid using the `any` type.  Unused variables and imports should be removed.

## FOLDER ORGANIZATION
(No information provided in the interaction)

## TECH STACK
TypeScript, ESLint, Jest

## PROJECT-SPECIFIC STANDARDS
- Unused variables and imports should be removed.
- Proper Jest configuration is required for TypeScript projects.  Ensure Jest types are correctly configured.  A `jest.config.js` or equivalent needs to be created and properly configured.  Check `package.json` for necessary Jest dependencies.

## WORKFLOW & RELEASE RULES
(No information provided in the interaction)

## REFERENCE EXAMPLES
(No information provided in the interaction)

## PROJECT DOCUMENTATION & CONTEXT SYSTEM
(No information provided in the interaction)

## DEBUGGING
Utilize ESLint to identify and resolve TypeScript linting issues, including unused variables, type issues, and Jest configuration problems.

## FINAL DOs AND DON'Ts
- **DO:** Use explicit types in TypeScript.
- **DO:** Remove unused variables and imports.
- **DO:** Configure Jest correctly for your TypeScript project.
- **DON'T:** Use the `any` type unless absolutely necessary.
- **DON'T:** Leave unresolved linting errors.